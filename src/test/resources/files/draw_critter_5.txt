ahead[6] < -1 mod mem[1] mod mem[1] --> mem[-1] := mem[-1] mem[1] := 1 mem[mem[-1]] := mem[3] mem[4] := 4 mem[6] := -1 mem[4] := 4 mem[mem[3]] := 2 bud;
6 = 1 * 17 and {-1 != -3 or 4 < 2 / 3 or -1 < mem[mem[mem[mem[1]]]]} and -1 mod mem[1] < ahead[6] --> mem[mem[1]] := 3 mem[mem[1]] := mem[1] mem[mem[2]] := 1 mem[1] := mem[mem[-9]] mem[1] := 1 mem[6] := 17 mem[-1] := ahead[6] mem[6] := 4 mem[6] := 6 mem[1] := mem[mem[1]] mem[mem[-2]] := 2;
4 != 1 and 6 < 1 mod mem[1] --> mem[mem[3]] := -8 mem[mem[6]] := 6 mem[mem[3]] := 1 mem[6] := 17 mem[6] := 6 mem[mem[mem[6]]] := 2 mem[mem[2]] := 6 mem[6] := -3 mem[6] := mem[1] mem[6] := 1 mem[mem[1]] := mem[6] mem[1] := mem[-23] mem[1] := mem[mem[1]] mem[mem[1]] := 6 left;
6 < mem[1] mod 1 --> mem[mem[3]] := -8 mem[mem[6]] := 6 mem[mem[3]] := 1 mem[6] := 6 mem[6] := 6 mem[mem[6]] := 2 mem[mem[2]] := 6 mem[6] := -3 mem[6] := mem[1] mem[6] := 1 mem[mem[1]] := mem[6] mem[1] := mem[-23] mem[1] := mem[mem[-9]] mem[mem[1]] := 6 mem[1] := mem[-9] mem[6] := 4 left;
4 <= mem[3] / -3 --> mem[-1] := 0 mem[mem[1]] := -22 mem[3] := 6 mem[mem[3]] := mem[1 * -1] mem[-1] := -1 mem[mem[3]] := mem[-1] mem[6] := mem[1] mem[1 + (-1 + 1 mod (mem[1] / mem[-1]))] := -1 mem[1] := mem[-9] mem[1] := mem[mem[-9]] mem[mem[3]] := -8;
(-1 + -1 / -1) * 1 - 6 <= mem[mem[mem[1]]] --> mem[2] := 2 mem[mem[mem[1] + (1 * 6 mod -95 - mem[-1])]] := -2 mem[-1] := 17 mem[1] := mem[6] mem[mem[-1]] := 17 mem[mem[1]] := mem[6] mem[6] := 6 mem[1] := mem[-2] mem[-1] := ahead[6] mem[1] := mem[-23] left;
-1 * -1 / (-1 * mem[1] * ((3 - mem[1]) / ahead[2])) < mem[7] or 4 < -1 --> mem[1] := -1 mem[mem[2]] := 6 mem[-3] := 0 mem[mem[1]] := 6 mem[mem[-1]] := ahead[1] mem[6] := -3 mem[2] := 4 mem[6] := 6 mem[1] := 6 mem[-1] := ahead[1];
mem[mem[1]] <= (-1 / -1 + -1) * 1 --> mem[-2] := 2 mem[2] := 2 mem[6] := 6 mem[-1] := 17 mem[-1] := mem[mem[6]] mem[mem[-1]] := 17 mem[mem[1]] := mem[6] mem[6] := 6 mem[17 + (-95 mod 1 - -1)] := -1 mem[-3] := -2 mem[mem[mem[3]]] := mem[-1] left;
-3 != -1 or 6 < 3 / 2 or -3 < mem[mem[mem[mem[1]]]] --> mem[mem[1]] := 1 mem[500] := mem[3] mem[6] := 17 mem[mem[-31]] := mem[mem[6]] mem[6] := mem[mem[-1]] mem[mem[1]] := 6 mem[1] := 1 mem[6] := -1 left;
ahead[6] < -1 mod 1 or -1 != -1 or {mem[mem[1]] != -1 + 1 mod mem[mem[mem[1]]] + 17 or -2 < ahead[-35] mod (mem[6] + 4) mod -3} and {-3 != -1 or 6 < 2 * mem[mem[1]] / 3} --> mem[-23] := mem[6] mem[mem[mem[3]]] := 2 mem[-1] := mem[mem[-1]] mem[6] := 17 mem[6] := -1 mem[3] := mem[6] mem[-1] := mem[1] mem[6] := mem[6] mem[mem[-3]] := 6 mem[-31] := 4 mem[-31] := mem[4] mem[1] := mem[mem[mem[1]]] mem[mem[1]] := mem[1] mem[-1] := 0 mem[2] := 2 mem[mem[1]] := 6 mem[1] := mem[mem[-9]] bud;
4 >= ahead[-3] / mem[-1 - 1 + -1 * mem[1] / -9] --> mem[-1] := 0 mem[-1] := 6 mem[mem[3]] := mem[0] mem[-3] := -1 mem[mem[mem[3]]] := mem[-1] mem[mem[6]] := mem[(-1 + -1 / -1) * 3 - 6] mem[1 + (-1 + (1 mod (mem[1] / mem[-1]) + mem[6] + 4 mod ahead[-35] mod -3))] := -1 mem[mem[mem[-1]]] := 4 mem[1] := -9;
mem[1] <= (3 / -1 + -1) * 1 --> mem[-2] := 2 mem[2] := 2 mem[mem[17 + (1 - -95 - -1)]] := mem[-1] mem[-1] := 17 mem[-1] := mem[mem[6]] mem[mem[-1]] := 17 mem[mem[1]] := mem[6] mem[6] := 6 mem[6] := 6 mem[1] := -2 mem[1] := mem[mem[-9]] left;